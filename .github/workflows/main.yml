name: Mas

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download ngrok
        run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Extract ngrok
        run: Expand-Archive ngrok.zip -DestinationPath ngrok

      - name: Authenticate ngrok
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Create ngrok Configuration
        run: |
          @"
          authtoken: $Env:NGROK_AUTH_TOKEN
          tunnels:
            rdp:
              proto: tcp
              addr: 3389
              region: europe
          "@" | Out-File -FilePath .\ngrok\ngrok.yml -Encoding utf8
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Terminal Services
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          # Создаёт или обновляет пользователя runneradmin
          $password = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
          if (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue) {
              Set-LocalUser -Name "runneradmin" -Password $password
          } else {
              New-LocalUser -Name "runneradmin" -Password $password -FullName "Runner Admin" -Description "Admin user for RDP"
              Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
          }

      - name: Start ngrok Tunnel
        run: .\ngrok\ngrok.exe start --all --config .\ngrok\ngrok.yml
